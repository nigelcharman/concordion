plugins {
    id 'net.researchgate.release' version '2.8.1'
    id 'org.ajoberstar.git-publish' version '2.1.3'
    id "com.jfrog.bintray" version "1.8.5"
    // id 'org.kordamp.gradle.clirr' version '0.26.0'
    id 'net.nemerosa.versioning' version '2.13.1'
}

apply from: 'build.gradle'

apply plugin: 'maven-publish'
apply plugin: 'java-library-distribution'

ext {
    githubUrl = "https://github.com/concordion/${project.name}"
    issuesUrl = "${githubUrl}/issues"
    vcsUrl =  "${githubUrl}.git"
    vcsConnection = "scm:git:git://github.com/concordion/${project.name}.git"

    if (!project.hasProperty("bintrayUsername")) {
        bintrayUsername = ''
    }
    if (!project.hasProperty("bintrayApiKey")) {
        bintrayApiKey = ''
    }
    if (!project.hasProperty("bintrayPassphrase")) {
        bintrayPassphrase = ''
    }
    if (!project.hasProperty("sonatypeUsername")) {
        sonatypeUsername = ''
    }
    if (!project.hasProperty("sonatypePassword")) {
        sonatypePassword = ''
    }
}

group='org.concordion'

distributions {
//    version = version - "-SNAPSHOT"
    main {
        contents {
            from ('.') { include '*.txt','build.gradle','src/**' }
            into ('lib') {
                from 'licenses'
            }
        }
    }
}

jar {
    manifest {
        attributes  'Specification-Title'   : project.name,
                'Implementation-Title'  : project.name,
                'Specification-Version' : version.substring(0, version.lastIndexOf(".")),
                'Implementation-Version': version,
                'Implementation-Vendor' : 'concordion.org',
                'Specification-Vendor'  : 'concordion.org',
                'Created-By'            : System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')',
                'Built-With'            : "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
                'Build-Time'            : String.format("%tFT%<tRZ", Calendar.getInstance(TimeZone.getTimeZone("Z"))),
                'Build-Revision'        : versioning.info.commit,
                'Build-OS'              : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    }
}

// 'gradle release' will also upload release to Bintray
createReleaseTag.dependsOn bintrayUpload

gitPublishCopy.dependsOn test
gitPublishCopy.dependsOn javadoc

task publishDocs(dependsOn: ['gitPublishPush'])

task publishSnapshot(dependsOn: ['test', 'publishMainPublicationToMavenRepository'])

task publishRelease(dependsOn: ['clean', 'test', 'javadoc', 'sourcesJar', 'javadocJar', 'publishDocs', 'release'])

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from (sourceSets.test.allSource) {
        include 'test/**'
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task testJar(type: Jar, dependsOn: testClasses) {
    classifier = 'tests'
    from sourceSets.test.output
    include 'test/**'
}

publishing {
    repositories {
        maven {
            if (project.version.endsWith('-SNAPSHOT')) {
                url "http://oss.jfrog.org/artifactory/simple/oss-snapshot-local/"
                credentials {
                    username bintrayUsername
                    password bintrayApiKey
                }
            }
        }        
    }
}

publishing {
    publications {
        main(MavenPublication) {
            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            artifact testJar {
                classifier "tests"
            }

            from components.java

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    name project.name
                    description project.description
                    url 'http://www.concordion.org'
                    packaging 'jar'
                    inceptionYear '2008'

                    scm {
                        url vcsUrl
                        connection vcsConnection
                        developerConnection vcsConnection
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.html'
                            distribution 'repo'
                        }
                    }

                    issueManagement{
                        system 'GitHub Issues'
                        url issuesUrl
                    }

                    developers {
                        developer {
                            id 'peterson3'
                            name 'David Peterson'
                            roles { role 'Project Creator' }
                        }
                        developer {
                            id 'nigel.charman.nz'
                            name 'Nigel Charman'
                            roles  { role 'Project Lead' }
                        }
                        developer {
                            id 'drtimwright'
                            name 'Tim Wright'
                            roles  { role 'Developer' }
                        }
                        developer {
                            id 'jose.m.beas'
                            name 'Jose M Beas'
                            roles  { role 'Developer' }
                        }
                        developer {
                            id 'gmandnepr'
                            name 'Ievgen Degtiarenko'
                            roles  { role 'Developer' }
                        }
                        developer {
                            id 'habuma'
                            roles  { role 'Developer' }
                        }
                        developer {
                            id 'pinfieldharm'
                            roles  { role 'Developer' }
                        }
                        developer {
                            id 'wangyizhuo'
                            roles  { role 'Developer' }
                        }
                    }
                }
                asNode().dependencies.'*'.findAll() {
                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                        dep.name == it.artifactId.text()
                    }
                }.each() {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

gitPublish {
    repoUri = 'git@github.com:concordion/concordion.git'
    branch = 'gh-pages'
    contents {
        from 'ghpages'
        
        into ('latest') {
            from ('build/reports/spec/concordion') {
                into 'spec'
            }
            
            from ('build/docs/javadoc/') {
                into 'javadoc'
            }
        }
    }  
}

bintray {
    user = bintrayUsername   // set this in your ~/.gradle/gradle.properties file
    key = bintrayApiKey         // set this in your ~/.gradle/gradle.properties file 
    publications = ['main'] // see publications closure
//    dryRun = true
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'concordion'
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        issueTrackerUrl = issuesUrl
        vcsUrl = vcsUrl
        websiteUrl = 'https://concordion.org'
        version  {
            name = project.version
            released = new Date()
            vcsTag = project.version
            gpg {
                sign = true
                passphrase = bintrayPassphrase // set this in your ~/.gradle/gradle.properties file 
            }
            mavenCentralSync {
                sync = true
                user = sonatypeUsername              // set this in your ~/.gradle/gradle.properties file 
                password = sonatypePassword          // OSS user password// set this in your ~/.gradle/gradle.properties file 
                close = '1'
            }
        }
    }
}

// clirr {
//     failOnErrors = false
//     baseline = 'org.concordion:concordion:2.0.0'
// }
